module FHouse

open FSound.Utilities
open FSound.Signal
open FSound.Filter
open FSound.Play



let save name =

    let rootHz = 220.0
    let volume = 5000.
    let sr = 44100.0


    let mel p = modulate (triangle (volume*0.4) (2.0 * rootHz * p)) (adsr 0.0 1.0 (p*0.05) 0.00 0.0 0.0) >> delay sr 2.0 (200.*p) 0.9 (0.5*p)

    let sub p = modulate (sinusoid (volume*0.4) ( rootHz * p) 0.0) (adsr 0.0 1.0 0.05 0.08 0.1 0.15)

    let trump p = modulate (saw (volume*0.3) ( rootHz *0.5 * p) ) (adsr 0.1 1.0 0.01 0.1 0.2 2.15) >> delay sr 2.0 (333.333*p) 0.50 0.4

    let hat em =  modulate (whiteNoise (volume*0.3)) (adsr 0.0 em 0.05 0.08 0.1 0.15)

    let snip em =  modulate (whiteNoise (volume*0.3)) (adsr 0.0 em 0.01 0.00 0.0 0.15)
    

    let a = ( 20.0,
            [
                (mel,   3,   [0;7;0;3]);
                (mel,   3,   [ 7;-7;-20; -19;0; -5;-3;]);
                (hat,   3,   [12;0;-24]);
                (hat,   3,   [24;12;12;  12;])  ;
                (hat,   3,   [12;0;0;0;0;     0;])  ;
                (snip,  3,   [-12;0;-24; -24;  -24;   -24;])  ;
                (sub,   3,   [-12;7;4;1;    0;])  ;
                (trump, 3,   [4;10;  36;  10;  4;] );
            ] )
    
    let b = ( 10.0,
            [
                (mel,   7,   [0;7;0;3]);
                (mel,   4,   [0;7;0;3]);
                (mel,   2,   [0;7;0;3]);
                (mel,   1,   [0;7;0;3]);
            ] )

    let c = ( 20.0,
            [
                (mel,   7,   [0;7;0;3]);
                (mel,   4,   [0;7;0;3]);
                (mel,   2,   [0;7;0;3]);
                (mel,   1,   [0;7;0;3]);
                (hat,   14,   [12;0;-24]);
                (hat,   14,    [    24;   12;      12;  12;])  ;
                (hat,   14, [    12;    0;       0;   0;    0;     0;])  ;
                (snip,  8, [   -12;    0;     -24; -24;  -24;   -24;])  ;
                (sub,   4,   [   -12;    7;       4;   1;    0;])  ;
                (trump, 4,    [   -12;  -12;     -15; -15;  -4;   -4;  -5; -2; 10;  -12; 4;  36;] );
                (trump, 14,    [   -12;  -12;     -15; -15;  -4;   -4;  -5; -2; 10;  -12; 4;  36;] );
                (trump, 28,    [   -12;  -12;     -15; -15;  -4;   -4;  -5; -2; 10;  -12; 4;  36;] );
            ] )

    let d = ( 40.0,
            [
                (mel,   7*3,   [0;7;0;3]);
                (mel,   4*3,   [12;7;0;3]);
                (mel,   2*3,   [0;19;12;15]);
                (mel,   1*3,   [-12;31;24;15]);
                (mel,   7*4,   [0;7;0;3]);
                (mel,   4*4,   [0;7;0;3]);
                (mel,   2*4,   [0;7;0;3]);
                (mel,   1*4,   [0;7;0;3]);
                (hat,   14,   [12;0;-24]);
                (hat,   14,    [    24;   12;      12;  12;                ])  ;
                (hat,   14, [    12;    0;       0;   0;    0;     0;])  ;
                (snip,  8*3, [   -12;    0;     -24; -24;  -24;   -24;])  ;
                (sub,   4*3,   [   -12;    7;       4;   1;    0;])  ;
                (trump, 4*3,    [   -12;  -12;     -15; -15;  -4;   -4;  -5; -2; 10;  -12; 4;  36;] );
                (trump, 14*3,    [   -12;  -12;     -15; -15;  -4;   -4;  -5; -2; 10;  -12; 4;  36;] );
                (trump, 28*3,    [   -12;  -12;     -15; -15;  -4;   -4;  -5; -2; 10;  -12; 4;  36;] );
            ] )


    [|b;b;c;c;d;d;a|] |> songToWaveGen |> makeWavFileFromWaveformGen name sr 
        

